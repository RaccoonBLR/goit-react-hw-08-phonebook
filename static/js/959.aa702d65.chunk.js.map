{"version":3,"file":"static/js/959.aa702d65.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Notify/Notify.styled.jsx","components/Notify/Notify.jsx","pages/Contacts.js"],"sourcesContent":["export const selectFilterValue = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n// export const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return filter\n      ? contacts.filter(({ name }) =>\n          name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contacts;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  margin: auto;\n  width: 460px;\n`;\n","import { Wrapper } from './Container.styled';\n\nimport { PropTypes } from 'prop-types';\n\nexport const Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  margin-bottom: 8px;\n\n  :last-of-type {\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 4px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 94px;\n  padding: 4px 18px;\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FiSmartphone } from 'react-icons/fi';\n\nimport { Button, Label, Input } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAppend = newContact => {\n    const { name: newName } = newContact;\n\n    contacts.some(({ name }) => name === newName)\n      ? alert(`${newName} is already in contacts.`)\n      : dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const newContact = {\n      name: evt.target.elements.name.value,\n      number: evt.target.elements.number.value,\n    };\n\n    handleAppend(newContact);\n\n    evt.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        <AiOutlineUser size={28} />\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        <FiSmartphone size={28} />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 14px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 4px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const Wrapper = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { setFilterValue } from 'redux/filter/slice';\n\nimport { HiOutlineSearch } from 'react-icons/hi';\n\nimport { Label, Wrapper, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const onChange = evt => {\n    const { value } = evt.currentTarget;\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <Label>\n      <Wrapper>\n        <HiOutlineSearch size={28} />\n        <Input\n          onChange={onChange}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Find by name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        />\n      </Wrapper>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactText = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nexport const ContactNumber = styled.span`\n  font-weight: 200;\n  font-size: 26px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px 10px;\n\n  svg {\n    pointer-events: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { FiDelete } from 'react-icons/fi';\nimport { BsDot } from 'react-icons/bs';\n\nimport { Button, ContactText, ContactNumber, Wrapper } from './Contact.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, number, id } = contact;\n\n  const handleDelete = ({ target }) => dispatch(deleteContact(target.id));\n\n  return (\n    <>\n      <ContactText>\n        <BsDot size={32} />\n        {name}:\n      </ContactText>\n      <Wrapper>\n        <ContactNumber>{number}</ContactNumber>\n        <Button onClick={handleDelete} id={id}>\n          <FiDelete size={24} />\n        </Button>\n      </Wrapper>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { Contact } from 'components/Contact/Contact';\n\nimport { List, Item } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Contact contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NotifyText = styled.p`\n  font-weight: 200;\n  font-size: 20px;\n`;\n","import { NotifyText } from './Notify.styled';\n\nexport const Notify = () => (\n  <NotifyText>You have not added any contacts yet</NotifyText>\n);\n","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { Container } from 'components/Container/Container';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'components/Notify/Notify';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {Boolean(contacts.length) && <ContactList />}\n      {!contacts.length && !isLoading && <Notify />}\n    </Container>\n  );\n}\n"],"names":["selectFilterValue","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","name","toLowerCase","includes","Wrapper","styled","Container","children","Label","Input","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","newContact","newName","some","alert","addContact","handleAppend","target","elements","value","number","reset","size","type","placeholder","pattern","title","required","Filter","onChange","currentTarget","setFilterValue","ContactText","ContactNumber","Contact","contact","id","onClick","deleteContact","List","Item","ContactList","map","NotifyText","Notify","Contacts","useEffect","fetchContacts","Loader","Boolean","length"],"sourceRoot":""}